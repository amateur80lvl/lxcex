#!/bin/sh -e

# Share host's XDG_RUNTIME_DIR.
# This hook relies on HOST_XDG_RUNTIME_DIR and HOST_WAYLAND_DISPLAY
# environment variables which are set by /usr/local/bin/start-user-containers

if [ -z "${HOST_XDG_RUNTIME_DIR}" ] ; then
    # exit 1
    # or use some default value:
    HOST_XDG_RUNTIME_DIR=/run/user/1000
fi

if [ -z "${HOST_WAYLAND_DISPLAY}" ] ; then
    # exit 1
    # or use some default value:
    HOST_WAYLAND_DISPLAY=wayland-1
fi

# We're dealing with mount entries, so expand any symlink
LXC_ROOTFS_MOUNT=$(readlink -f "${LXC_ROOTFS_MOUNT}")

# Mount /run and /run/host-xdg-runtime-dir in the container.
mount -t tmpfs -o noexec,nodev,nosuid,mode=755,size=4M tmpfs "${LXC_ROOTFS_MOUNT}/run"
mkdir -p "${LXC_ROOTFS_MOUNT}/run/host-xdg-runtime-dir"
mount --bind "${HOST_XDG_RUNTIME_DIR}" "${LXC_ROOTFS_MOUNT}/run/host-xdg-runtime-dir"

# Create /run/user/<uid> directories and make links to host socket.
# XXX what is the best way to do this? PAM? but libpam-script configuration is weird,
#     elogind PAM module drops user directory when, say, you exit from `su user`,
#     and lxc-attach does not honor PAM at all when you run a command in container.
for userdir in ${LXC_ROOTFS_MOUNT}/home/* ; do
    username=`basename ${userdir}`
    passwd_entry=`grep "^${username}" "${LXC_ROOTFS_MOUNT}/etc/passwd"`
    if [ -n "${passwd_entry}" ] ; then
        host_userid=`stat -c %u ${userdir}`
        container_userid=`echo "${passwd_entry}" | awk '{split($0,a,":"); print a[3]}'`
        run_dir="${LXC_ROOTFS_MOUNT}/run/user/${container_userid}"
        mkdir -p "${run_dir}"
        chown $host_userid:$host_userid "${run_dir}"
        chmod 700 "${run_dir}"
        ln -s "../../host-xdg-runtime-dir/${HOST_WAYLAND_DISPLAY}" "${run_dir}"
    fi
done
